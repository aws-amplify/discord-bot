name: release-env
on:
  workflow_call:
    inputs:
      env:
        description: 'Application environment (e.g. "next")'
        type: string
        required: true
      version:
        description: 'New version to deploy'
        type: string
        required: true
      aws-region:
        description: 'AWS Region to deploy to'
        type: string
        required: false
        default: 'us-east-1'
jobs:
  release-env:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    permissions:
      id-token: write # for AWS Action to interact with GitHub's OIDC endpoint
      contents: write # for gh CLI to create a release, otherwise "read" for AWS Action
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ secrets.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ inputs.aws-region }}
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: ./.github/actions/configure-node
      - run: pnpm install
      - run: pnpm build
      - name: cdk synth
        run: |
          pnpm --filter ./cdk run synth \
            --context env=${{ inputs.env }} \
            --context version=${{ inputs.version }} \
            --quiet
      - name: cdk deploy
        timeout-minutes: 20
        run: |
          pnpm --filter ./cdk run deploy \
            --require-approval never \
            --context env=${{ inputs.env }} \
            --context version=${{ inputs.version }}
        env:
          VITE_DISCORD_GUILD_ID: ${{ secrets.VITE_DISCORD_GUILD_ID }}
          VITE_NEXTAUTH_URL: ${{ secrets.VITE_NEXTAUTH_URL }}
          VITE_HOST: ${{ secrets.VITE_HOST }}
  test-env:
    runs-on: ubuntu-latest
    needs: [release-env]
    environment: ${{ inputs.env }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: ./.github/actions/configure-node
      - run: pnpm install
      # run tests on live environment
      - run: pnpm run test
        env:
          TEST_HOST: ${{ secrets.VITE_HOST }}
          DISCORD_GUILD_ID: ${{ secrets.VITE_DISCORD_GUILD_ID }}
