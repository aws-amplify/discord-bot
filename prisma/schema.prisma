// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Question {
  id                  String   @id @default(cuid())
  threadId            String   @unique
  ownerId             String
  channelName         String
  createdAt           DateTime
  updatedAt           DateTime @updatedAt
  threadMetaUpdatedAt DateTime @default(now())
  title               String
  isSolved            Boolean  @default(false)
  url                 String?
}

model ConfigurationAdminRoles {
  id              String         @id
  Configuration   Configuration? @relation(fields: [configurationId], references: [id])
  configurationId String?
}

model Configuration {
  // ID of Discord server
  id         String                    @id @unique
  name       String
  createdAt  DateTime                  @default(now())
  updatedAt  DateTime                  @updatedAt
  adminRoles ConfigurationAdminRoles[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
